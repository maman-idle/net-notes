Queue

When you try to pay something that you buy on convinience store, and there are some people ahead of you that try to do the same thing, you will take a line behind the last person and wait for the people ahead of you to finish their payment on the cashier. The same thing happened in networking, when lot of traffics came in to the router, (to get routed to the next node) they will form a queue. On networking, there are several queue mechanism: First In First Out (FIFO), Priority queue, Weighted Fair Queue (WFQ), Class Based WFQ (CBWFQ), and Low-Latency Queueing (LLQ).

First in first out, it is quite self-explanatory. The first packet which arrived to a router's port will got in first to the queue, therefore it will be taken care of first by the router. Second packet came in, will got the second place in queue, third packet got the third place, fourth got the fourth place, and so on. This kind of queue is quite fair if the traffics are same, meaning each packet has same level of importance to another. But this queue get worse when, some traffics came from applications that need minimum delay or can't tolerate delay, something like a VoIP or video streaming. You don't want to queued up VoIP traffics in the same queue with FTP, web browsing, or email traffics. 

Priority is given to the queue, so there will be queue with higher priority than the other. That means, packets with "clearence" to queued up into queue with higher priority will be served first. The router will check the high priority queue for available packet every time. When traffics show up in the high priority queue, router will immediattrafficke care of them. Router will not move to the lower queues if the higher queues get some traffics in it. Well, this kind of queue is pretty good to prioritize delay sensitive traffics such as VoIP and video streaming, but this queue can starve the other packet's queue. If there are several people using VoIP in your network which implemented this queue, well you will have a bad time on loading your website. 

So, in order to make it fair for the low priority traffics, we can make the algorithm in the router for queueing, to process traffics based on their weight. For example, we're gonna put weights on A, B, and C traffics with 2, 1, and 1. Now, what does that mean? In this queue, every traffic will have their own lines (flow) that means every traffic will be taken care of by router and there won't be any abandoned lines but, the router will process the traffic by their weights. Okay, using above weight rule, if there are 300kb A, 500kb B, and 500kb C traffics arrive at the same time, they will queue up in their own line. Router will put 300kb A, 150kb B, and 150kb C traffics into output line (hardware queue) and processes them. You see, the weight rule above become the ratio of how much does the router need to process for each traffics, it makes the queue more dynamic. After the first round of traffic has been processed, the router will check the queue, and if there are remainder of the traffics left, router will put them into output line in this case, router will put 350kb B and 350kb C in. This queue is called Weighted Fair Queue.

WFQ is queue algorithm that use flow and weight to differentiate incoming traffics. Now, there is other mechanism to diffrentiate packet or traffic, it's using some kind of class. The queue is called Class Based Weighted Fair Queue (CBWFQ), the classes in this queue can be protocols, ACL, input interface etc. So, this queue still applied weight ruling on the traffics, and the traffics are classified using the class. Router will process the traffic's queues using round robin method, meaning that even though the traffic is from VoIP class with high weight, it still needs to wait for its turn to get processed by the router. This, can create jitter or delay to that traffic, even though this queue is quite fair for other traffics.

Low Latency Queuing (LLQ) is similiar with CBWFQ, but in this queue we use prioritization on one or multiple queues. This is like implementing strict priority queue. When there is traffic in queue with the highest priority, the router's scheduler which run round robin will ignores other queues and will start processing the traffic on the highest queue untill it's done. Yes, this action can cause starvation for the other queues, but this can be mitigated by applying policy. Policies can be applied to cap the maximum bandwidth for the high priority queues, so the other queues can still send their traffic. 